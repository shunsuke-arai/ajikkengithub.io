// C0118008[beta].c : goblin & dragon のダンジョン//

#include <stdio.h>

// 部屋の情報
struct room
{
	int goblin1;		// ゴブリン1がいる
	int goblin2;		// ゴブリン2がいる
	int goblin3;		// ゴブリン3がいる
	int goblin4;		// ゴブリン4がいる
	int goblin5;		// ゴブリン5がいる
	int dragon;           	// ドラゴンがいる
	int hero;			// 主人公がいる
	int heroGo;		// 部屋に主人公が行ったか
	int doorInfo[4];		// ドアの情報
	int hasWeapon;			// 武器がある
};

// ダンジョンの部屋は5x5のグリッドなので二次元配列
struct room dungeon[6][6];

// 主人公の情報
struct HeroInfo
{
	int roomX;			// 主人公がいる部屋のX軸
	int roomY;			// 主人公がいる部屋のY軸
	int hasWeapon;		// 武器を持っているか
	int keyNumber;		// キーの数
	int heroHP;	// 主人公のＨＰ
};

// 主人公
struct HeroInfo hero;

// 主人公と敵キャラの最大ＨＰ
#define heroStartHP          150
#define goblin1StartHP       3
#define goblin2StartHP       5
#define goblin3StartHP       7
#define goblin4StartHP       9
#define goblin5StartHP       11
#define dragonStartHP         999

// 攻撃のダメージを決める値	
#define heroAtkDmg		30
#define WeaponDmg		1000
#define goblinAtkDmg		1
#define dragonAtkDmg	  999

// 主人公と敵キャラとの戦闘結果
#define heroWins			0
#define heroLoses			1	

// ドアの状況
#define noDoor		0
#define openDoor	        1
#define lockedDoor	2

// 方向
#define Up		0
#define Left		1
#define Down	2
#define Right		3

// GoblinのＨＰを格納する変数
int goblin1HP;
int goblin2HP;
int goblin3HP;
int goblin4HP;
int goblin5HP;
int dragonHP;

// 勝利と敗北のための変数
int dragonDead;  // ドラゴンが死んだか
int heroDead;		// 主人公が死んだか

// 関数のプロトタイプ
void makeDungeon();
void makeHero();
void makeGoblin();
void makeEndingRule();
void printGameRule();
void RoomInfo();
int getUserMove();
void moveHero(int);
void VSGoblin(void);
void EquipWeapon(void);

int BattleGoblin(int, int);
int BattleDragon(int, int);
int heroAtk(int);
int goblinAtk(void);
int dragonAtk(void);

int main(void)
{
	char c;
	int moveDirection;				// 移動方向

	// 初期化
	makeDungeon();					// ダンジョンの初期化
	makeHero();						// 主人公の初期化
	makeGoblin();					// ゴブリンの初期化
	makeEndingRule();		// 終了条件を初期化
	printGameRule();					// ルールを表示

	// ゲームループ：勝利条件と敗北条件が満たしさない限り続く
	while (1)
	{
		RoomInfo();							// 部屋の情報を表示

		VSGoblin();					// ゴブリンがいるなら戦闘
		if (heroDead) {						// 負け
			break;
		}
		if (dragonDead) {					// 勝利
			break;
		}
		EquipWeapon();						// 武器があるなら獲得

		moveDirection = getUserMove();			// 移動方向を入力してもらう
		moveHero(moveDirection);			// 選んだ方向に移動させる

	}

	// 勝利か敗北のメッセージでゲーム終了する
	printf("\n------------------------------------------------------\n");
	printf("GAME CREAR\n");
	if (dragonDead)
	{
		printf("俺の勝ち。なんで負けたか明日までに考えておいてください。\n");
		printf("\n------------------------------------------------------\n");
	}
	else
	{
		printf("やられた...目の前が真っ暗になった...\n");
		printf("\n------------------------------------------------------\n");
	}
	printf("\nキーを押して終了\n");
	c = getchar();

	return 0;
}

// この関数でダンジョンを初期化する
void makeDungeon()
{
	int x;

	dungeon[1][1].hero = 1;

	dungeon[1][1].heroGo = 1;

	dungeon[1][2].goblin1 = 1;
	dungeon[2][3].goblin2 = 1;
	dungeon[3][4].goblin3 = 1;
	dungeon[4][2].goblin4 = 1;
	dungeon[5][4].goblin5 = 1;

	dungeon[5][5].dragon = 1;

	dungeon[4][4].hasWeapon = 1;


	dungeon[1][1].doorInfo[Right] = openDoor;
	dungeon[1][1].doorInfo[Down] = openDoor;

	dungeon[1][2].doorInfo[Up] = openDoor;
	dungeon[1][2].doorInfo[Down] = openDoor;
	dungeon[1][2].doorInfo[Right] = openDoor;

	dungeon[1][3].doorInfo[Up] = openDoor;
	dungeon[1][3].doorInfo[Down] = openDoor;
	dungeon[1][3].doorInfo[Right] = openDoor;

	dungeon[1][4].doorInfo[Up] = openDoor;
	dungeon[1][4].doorInfo[Down] = openDoor;
	dungeon[1][4].doorInfo[Right] = openDoor;

	dungeon[1][5].doorInfo[Up] = openDoor;
	dungeon[1][5].doorInfo[Right] = openDoor;

	dungeon[2][1].doorInfo[Right] = openDoor;
	dungeon[2][1].doorInfo[Down] = openDoor;
	dungeon[2][1].doorInfo[Left] = openDoor;

	dungeon[2][2].doorInfo[Up] = openDoor;
	dungeon[2][2].doorInfo[Right] = openDoor;
	dungeon[2][2].doorInfo[Down] = openDoor;
	dungeon[2][2].doorInfo[Left] = openDoor;

	dungeon[2][3].doorInfo[Up] = openDoor;
	dungeon[2][3].doorInfo[Right] = openDoor;
	dungeon[2][3].doorInfo[Down] = openDoor;
	dungeon[2][3].doorInfo[Left] = openDoor;

	dungeon[2][4].doorInfo[Up] = openDoor;
	dungeon[2][4].doorInfo[Right] = openDoor;
	dungeon[2][4].doorInfo[Down] = openDoor;
	dungeon[2][4].doorInfo[Left] = openDoor;

	dungeon[2][5].doorInfo[Up] = openDoor;
	dungeon[2][5].doorInfo[Right] = openDoor;
	dungeon[2][5].doorInfo[Left] = openDoor;

	dungeon[3][1].doorInfo[Right] = openDoor;
	dungeon[3][1].doorInfo[Left] = openDoor;
	dungeon[3][1].doorInfo[Down] = openDoor;

	dungeon[3][2].doorInfo[Up] = openDoor;
	dungeon[3][2].doorInfo[Right] = openDoor;
	dungeon[3][2].doorInfo[Down] = openDoor;
	dungeon[3][2].doorInfo[Left] = openDoor;

	dungeon[3][3].doorInfo[Up] = openDoor;
	dungeon[3][3].doorInfo[Right] = openDoor;
	dungeon[3][3].doorInfo[Down] = openDoor;
	dungeon[3][3].doorInfo[Left] = openDoor;

	dungeon[3][4].doorInfo[Up] = openDoor;
	dungeon[3][4].doorInfo[Right] = openDoor;
	dungeon[3][4].doorInfo[Down] = openDoor;
	dungeon[3][4].doorInfo[Left] = openDoor;

	dungeon[3][5].doorInfo[Up] = openDoor;
	dungeon[3][5].doorInfo[Right] = openDoor;
	dungeon[3][5].doorInfo[Left] = openDoor;

	dungeon[4][1].doorInfo[Right] = openDoor;
	dungeon[4][1].doorInfo[Left] = openDoor;
	dungeon[4][1].doorInfo[Down] = openDoor;

	dungeon[4][2].doorInfo[Up] = openDoor;
	dungeon[4][2].doorInfo[Right] = openDoor;
	dungeon[4][2].doorInfo[Down] = openDoor;
	dungeon[4][2].doorInfo[Left] = openDoor;

	dungeon[4][3].doorInfo[Up] = openDoor;
	dungeon[4][3].doorInfo[Right] = openDoor;
	dungeon[4][3].doorInfo[Down] = openDoor;
	dungeon[4][3].doorInfo[Left] = openDoor;

	dungeon[4][4].doorInfo[Up] = openDoor;
	dungeon[4][4].doorInfo[Right] = openDoor;
	dungeon[4][4].doorInfo[Down] = openDoor;
	dungeon[4][4].doorInfo[Left] = openDoor;

	dungeon[4][5].doorInfo[Up] = openDoor;
	dungeon[4][5].doorInfo[Right] = openDoor;
	dungeon[4][5].doorInfo[Left] = openDoor;

	dungeon[5][1].doorInfo[Down] = openDoor;
	dungeon[5][1].doorInfo[Left] = openDoor;

	dungeon[5][2].doorInfo[Up] = openDoor;
	dungeon[5][2].doorInfo[Down] = openDoor;
	dungeon[5][2].doorInfo[Left] = openDoor;

	dungeon[5][3].doorInfo[Up] = openDoor;
	dungeon[5][3].doorInfo[Down] = openDoor;
	dungeon[5][3].doorInfo[Left] = openDoor;

	dungeon[5][4].doorInfo[Up] = openDoor;
	dungeon[5][4].doorInfo[Down] = openDoor;
	dungeon[5][4].doorInfo[Left] = openDoor;

}


// 主人公の情報を初期化
void makeHero()
{
	// 主人公が最初にいる部屋は(1,1)
	hero.roomX = 1;
	hero.roomY = 1;
	// 主人公は素手
	hero.hasWeapon = 0;
	// 最大ＨＰに設定
	hero.heroHP = heroStartHP;
}

// ゴブリンの情報を初期化
void makeGoblin()
{
	goblin1HP = goblin1StartHP;			// ゴブリン1のHP
	goblin2HP = goblin2StartHP;			// ゴブリン2のHP
	goblin3HP = goblin3StartHP;			// ゴブリン3のHP
	goblin4HP = goblin4StartHP;         // ゴブリン4のHP
	goblin5HP = goblin5StartHP;         // ゴブリン5のHP

	dragonHP = dragonStartHP;	// ドラゴンのHP
}

// 終了条件を初期化
void makeEndingRule()
{
	dragonDead = 0;					// ドラゴンが倒された
	heroDead = 0;							//主人公が死んだ
}

// ゲームのルールを説明する
void printGameRule()
{
	char c, userSelection;

	printf("新米冒険者へようこそ\n");
	printf("\n");
	printf("1) ルール説明\n");
	printf("2) ゲームスタート！\n");
	printf("1か2をを選択: ");

	// ユーザの選択
	c = getchar();
	userSelection = c;
	while ((c = getchar()) != '\n')
		;
	if (userSelection == '1')
	{
		printf("\nRules of 'goblin & dragon' Dungeon:\n");
		printf("==========================\n");
		printf("1) You are a prince and in room (1,1) of the Dungeon of the Goblins\n");
		printf("2) Somewhere in this dungeon there is a princess that you must rescue from the Goblins\n");
		printf("3) There are two Goblins and one Dragon in this dungeon\n");
		printf("4) When you enter a room with a Goblins, you must  him\n");
		printf("5) When fighting a Goblin, your health points will go down\n");
		printf("6) To improve your chances of beating a Goblin, you need a sword that is somewhere in the dungeon\n");
		printf("7) The princess is in the room with the Dragon\n");
		printf("8) To enter the room with the Dragon you need two keys\n");
		printf("9) Each Goblin holds one of the keys. If you defeat a Goblin, you will get the key he carries.\n");
		printf("10) Each room has a number of doors through which you can go to get to the other rooms\n");
		printf("11) Only by visiting a room, you will get access to the information about this room\n");
		printf("12) The Goblins smell so bad that you can smell them in the neighboring room\n");
		c = getchar();
	}

	printf("\nGood Luck\n\n");
	printf("\n-------------------------------------------------------\n");

	// 主人公のHPを表示
	printf("Hero HP: %d\n", hero.heroHP);
}

// 部屋の情報を表示する
void RoomInfo()
{
	int x = hero.roomX;
	int y = hero.roomY;

	printf("\nここは%d-%dの部屋\n", x, y);


	// 部屋にゴブリンかドラゴンがいることを表示
	if (dungeon[x][y].goblin1)
	{
		printf("\n------------------------------------------------------\n");
		printf("\nゴブリンがいるぞ！\n\n");
		printf("\n------------------------------------------------------\n");
	}
	else if (dungeon[x][y].goblin2)
	{
		printf("\n------------------------------------------------------\n");
		printf("\nゴブリンがいるぞ！\n\n");
		printf("\n------------------------------------------------------\n");
	}
	else if (dungeon[x][y].goblin3)
	{
		printf("\n------------------------------------------------------\n");
		printf("\nゴブリンがいるぞ！\n\n");
		printf("\n------------------------------------------------------\n");
	}
	else if (dungeon[x][y].goblin4)
	{
		printf("\n------------------------------------------------------\n");
		printf("\nゴブリンがいるぞ！\n\n"); 
		printf("\n------------------------------------------------------\n");
	}
	else if (dungeon[x][y].goblin5)
	{
		printf("\n------------------------------------------------------\n");
		printf("\nゴブリンがいるぞ！\n\n");
		printf("\n------------------------------------------------------\n");
	}
	else if (dungeon[x][y].dragon)
	{
		printf("\n------------------------------------------------------\n");
		printf("\nドラゴンだ...！\n\n");
		printf("\nすごい強そうだ...！\n\n");
		printf("\n------------------------------------------------------\n");
	}

	// この部屋のドア情報を表示
	if (dungeon[x][y].doorInfo[Up] == openDoor)
	{
		printf("\n北に抜けられそうだ...");
	}
	else if (dungeon[x][y].doorInfo[Up] == lockedDoor)
	{
		printf("\n北には行けないようだ...");
	}
	if (dungeon[x][y].doorInfo[Right] == openDoor)
	{
		printf("\n西に抜けられそうだ...");
	}
	else if (dungeon[x][y].doorInfo[Right] == lockedDoor)
	{
		printf("\n西には行けないようだ...");
	}
	if (dungeon[x][y].doorInfo[Down] == openDoor)
	{
		printf("\n南に抜けられそうだ...");
	}
	else if (dungeon[x][y].doorInfo[Down] == lockedDoor)
	{
		printf("\n南には行けなさそうだ...");
	}
	if (dungeon[x][y].doorInfo[Left] == openDoor)
	{
		printf("\n東に抜けられそうだ...");
	}
	else if (dungeon[x][y].doorInfo[Left] == lockedDoor)
	{
		printf("\n東には行けなさそうだ...");
	}
}

// 移動方向を入力してもらう
int getUserMove()
{
	int direction = -1;
	int legalDirection = 0;
	char c;
	int x = hero.roomX;
	int y = hero.roomY;

	// 正しい方向が入力されない限り繰り返す
	while (!legalDirection)
	{
		// ユーザーから方向を入力
		printf("\nN,W,S,Eを入力で移動してね: ");
		c = getchar();
		// 改行文字をバッファーから削除
		scanf("%*c");

		// 入力は正しいかどうかを確認
		switch (c)
		{
		case 'N':
			// 北方向にドアがあれば方向決定
			if (dungeon[x][y].doorInfo[Up] == openDoor)
			{
				direction = Up;
				legalDirection = 1;
			}
			else {
				printf("そっちには行けないよ\n");
			}
			break;
		case 'W':
			// 西方向にドアがあれば方向決定
			if (dungeon[x][y].doorInfo[Right] == openDoor)
			{
				direction = Right;
				legalDirection = 1;
			}
			else {
				printf("そっちには行けないよ\n");
			}
			break;
		case 'S':
			// 南方向にドアがあれば方向決定
			if (dungeon[x][y].doorInfo[Down] == openDoor)
			{
				direction = Down;
				legalDirection = 1;
			}
			else {
				printf("そっちには行けないよ\n");
			}
			break;
		case 'E':
			// 東方向にドアがあれば方向決定
			if (dungeon[x][y].doorInfo[Left] == openDoor)
			{
				direction = Left;
				legalDirection = 1;
			}
			else {
				printf("そっちには行けないよ\n");
			}
			break;
		default:
			// 不正入力
			printf("進めないよ\n");
			break;
		}
	}

	return direction;
}

// 選んだ方向に主人公を移動させる
void moveHero(int direction)
{
	int currentX = hero.roomX;
	int currentY = hero.roomY;
	int newX, newY;

	// 主人公を元の部屋から消す
	dungeon[currentX][currentY].hero = 0;

	//　新しい部屋のX軸とY軸を方向から獲得
	if (direction == Up)
	{
		newX = currentX;
		newY = currentY - 1;
	}
	else if (direction == Right)
	{
		newX = currentX + 1;
		newY = currentY;
	}
	else if (direction == Down)
	{
		newX = currentX;
		newY = currentY + 1;
	}
	else if (direction == Left)
	{
		newX = currentX - 1;
		newY = currentY;
	}

	//新しい場所の情報を追加
	hero.roomX = newX;
	hero.roomY = newY;
	dungeon[newX][newY].hero = 1;
	dungeon[newX][newY].heroGo = 1;

}

void EquipWeapon(void)
{
	int x = hero.roomX;
	int y = hero.roomY;

	// 部屋に武器があれば獲得
	if (dungeon[x][y].hasWeapon)
	{
		hero.hasWeapon = 1;
		dungeon[x][y].hasWeapon = 0;
		printf("\n\nheroは武器を手に入れた 攻撃力が上がった\n");
	}
}


// ゴブリンがいるなら戦闘
void VSGoblin(void)
{
	int x = hero.roomX;
	int y = hero.roomY;
	int result;
	char c;

	if (dungeon[x][y].goblin1)
	{
		if (hero.hasWeapon)
		{
			// 武器あり
			printf("\n------------------------------------------------------\n");
			printf("\nこっちには武器がある！\n");
			printf("\n------------------------------------------------------\n");
			printf("キーを押して攻撃\n\n");
			c = getchar();
			result = BattleGoblin(goblin1HP, 1);
		}
		else
		{
			// 武器なし
			printf("\n------------------------------------------------------\n");
			printf("\n素手だけどいけるかな...\n");
			printf("\n------------------------------------------------------\n");
			printf("\nキーを押して攻撃\n\n");
			c = getchar();
			result = BattleGoblin(goblin2HP, 0);
		}
		if (result == heroWins)
		{
			printf("\n------------------------------------------------------\n");
			printf("\n対ありでした\n");
			printf("\n------------------------------------------------------\n");
			dungeon[x][y].goblin1 = 0;
		}
		else {
			// 敗北条件達成
			heroDead = 1;
		}
	}
	else if (dungeon[x][y].goblin2)
	{
		if (hero.hasWeapon)
		{
			// 武器あり
			printf("\n------------------------------------------------------\n");
			printf("\nこっちには武器がある！\n");
			printf("\n------------------------------------------------------\n");
			printf("キーを押して攻撃\n\n");
			c = getchar();
			result = BattleGoblin(goblin2HP, 1);
		}
		else
		{
			// 武器なし
			printf("\n------------------------------------------------------\n");
			printf("\n殴ったら絶対痛いやつやん...\n");
			printf("\n------------------------------------------------------\n");
			printf("キーを押して攻撃\n\n");
			c = getchar();
			result = BattleGoblin(goblin2HP, 0);
		}
		if (result == heroWins)
		{
			printf("\n------------------------------------------------------\n");
			printf("\nGG\n");
			printf("\n------------------------------------------------------\n");
			dungeon[x][y].goblin2 = 0;
		}
		else {

			heroDead = 1;
		}
	}
	else if (dungeon[x][y].goblin3)
	{
		if (hero.hasWeapon)
		{
			//武器あり
			printf("\n------------------------------------------------------\n");
			printf("\nこっちには武器がある！\n");
			printf("\n------------------------------------------------------\n");
			printf("キーを押して攻撃\n\n");
			c = getchar();
			result = BattleGoblin(goblin3HP, 1);
		}
		else
		{
			// 武器なし
			printf("\n------------------------------------------------------\n");
			printf("\n素手でいけんのか...？\n");
			printf("\n------------------------------------------------------\n");
			printf("キーを押して攻撃\n\n");
			c = getchar();
			result = BattleGoblin(goblin3HP, 0);
		}
		if (result == heroWins)
		{
			printf("\n------------------------------------------------------\n");
			printf("\n素手で行けた...!\n");
			printf("\n------------------------------------------------------\n");
			dungeon[x][y].goblin3 = 0;
		}
		else {
			//敗北条件達成
			heroDead = 1;
		}

	}
	else if (dungeon[x][y].goblin4)
	{
		if (hero.hasWeapon)
		{
			// 武器あり
			printf("\n------------------------------------------------------\n");
			printf("\nこっちには武器がある！\n");
			printf("\n------------------------------------------------------\n");
			printf("キーを押して攻撃\n\n");
			c = getchar();
			result = BattleGoblin(goblin4HP, 1);
		}
		else
		{
			// 武器なし
			printf("\n------------------------------------------------------\n");
			printf("\n蛙組み手！\n");
			printf("\n------------------------------------------------------\n");
			printf("キーを押して攻撃\n\n");
			c = getchar();
			result = BattleGoblin(goblin4HP, 0);
		}
		if (result == heroWins)
		{
			printf("\n------------------------------------------------------\n");
			printf("\nI am champion.\n");
			printf("\n------------------------------------------------------\n");
			dungeon[x][y].goblin4 = 0;
		}
		else {
			//敗北条件達成
			heroDead = 1;
		}

		}
	else if (dungeon[x][y].goblin5)
	{
	if (hero.hasWeapon)
	{
		// 武器あり
		printf("\n------------------------------------------------------\n");
		printf("\nこっちには武器がある！\n");
		printf("\n------------------------------------------------------\n");
		printf("キーを押して攻撃\n\n");
		c = getchar();
		result = BattleGoblin(goblin5HP, 1);
	}
	else
	{
		// 武器なし
		printf("\n------------------------------------------------------\n");
		printf("\nそろそろ素手はきついって\n");
		printf("\n------------------------------------------------------\n");
		printf("キーを押して攻撃\n\n");
		c = getchar();
		result = BattleGoblin(goblin5HP, 0);
	}
	if (result == heroWins)
	{
		dungeon[x][y].goblin5 = 0;
	}
	else {
        //敗北条件達成
		heroDead = 1;
	}
	}
	else if (dungeon[x][y].dragon)
	{
		if (hero.hasWeapon)
		{
			// 武器あり
			printf("\n------------------------------------------------------\n");
			printf("\nこっちには武器がある！\n");
			printf("\n------------------------------------------------------\n");
			printf("キーを押して攻撃\n\n");
			c = getchar();
			result = BattleDragon(dragonHP, 1);
		}
		else
		{
			// 武器なし
			printf("\n------------------------------------------------------\n");
			printf("\n逆に痛く無くなってきたな\n");
			printf("\n------------------------------------------------------\n");
			printf("キーを押して攻撃\n\n");
			c = getchar();
			result = BattleDragon(dragonHP, 0);
		}
		if (result == heroWins)
		{
			dragonDead = 1;
			printf("\n------------------------------------------------------\n");
			printf("\n勝った...のか...\n");
			printf("\n------------------------------------------------------\n");

			dungeon[x][y].dragon = 0;
			
		}
		else {
			//敗北条件達成
			heroDead = 1;
		}
	}
}

//戦闘シミュレーション
int BattleGoblin(int goblinHP, int hasWeapon)
{
	char c;

	while (1)
	{
		// 攻撃
		goblinHP -= heroAtk(hasWeapon);
		printf("ゴブリンのHP: %d\n", goblinHP);
		
		if (goblinHP <= 0)
		{
			return heroWins;
		}
		//反撃
		hero.heroHP -= goblinAtk();
		printf("主人公のHP: %d\n", hero.heroHP);
		
		if (hero.heroHP <= 0)
		{
			return heroLoses;
		}

		printf("俺たちの冒険はこれからだ！");
		c = getchar();

	}
	return 0;
}

// 戦闘シミュレーション
int BattleDragon(int dragonHP, int hasWeapon)
{
	char c;

	while (1)
	{
		// 攻撃
		dragonHP -= heroAtk(hasWeapon);
		printf("ドラゴンのHP: %d\n", dragonHP);
		
		if (dragonHP <= 0)
		{
			return heroWins;
		}
		// 反撃
		hero.heroHP -= dragonAtk();
		printf("主人公のHP: %d\n", hero.heroHP);
		
		if (hero.heroHP <= 0)
		{
			return heroLoses;
		}
		printf("\n------------------------------------------------------\n");
		printf("こいつに勝てんのか...?");
		printf("\n------------------------------------------------------\n");
		c = getchar();

	}
	return 0;
}

// 攻撃
int heroAtk(int hasWeapon)
{
	int damage = heroAtkDmg;
	
	if (hasWeapon)
	{
		damage += 99999;
	}
	printf("主人公の攻撃, 攻撃力: %d\n", damage);
	return damage;
}

// ゴブリンの攻撃
int goblinAtk(void)
{
	int damage = goblinAtkDmg;
	printf("ゴブリンの攻撃, 攻撃力: %d\n", damage);
	return damage;
}

// ドラゴンの攻撃
int dragonAtk(void)
{
	int damage = dragonAtkDmg;
	printf("ドラゴンの攻撃, 攻撃力: %d\n", damage);
	return damage;
}
